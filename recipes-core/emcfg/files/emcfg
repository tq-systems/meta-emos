#!/bin/sh

PRODUCT_INFO=/etc/product-info.json
CFG=/cfglog/system
APPCFG=/cfglog/apps
RUNETC=/run/em/etc

CMD="$1"; shift


get_serial() {
	fw_printenv -n serial
}

get_default_hostname() {
	local product_code="$(jq -r '.code' <"$PRODUCT_INFO")"
	echo "${product_code}-$(get_serial)"
}

cmd_init() {
	mkdir -p $CFG
	[ -e $CFG/hostname	] || get_default_hostname >	$CFG/hostname
	[ -e $CFG/machine-id	] || touch 			$CFG/machine-id
	[ -e $CFG/ntp.json	] || echo '{"enable":true}' >	$CFG/ntp.json
	[ -e $CFG/network.json	] || echo '{"mode":"dhcp"}' >	$CFG/network.json
}

cmd_update_network() {
	mkdir -p $RUNETC/systemd/network/

	jq -r '
"[Match]
Name=eth0

[DHCP]
ClientIdentifier=mac

[Network]
LinkLocalAddressing=yes",

if .mode == "static" then

	"DHCP=no",
	"Address=\(.address)/\(.prefixlen)",

	if .gateway then
		"Gateway=\(.gateway)"
	else
		empty
	end,
	(.dns // [] | map("DNS=\(.)") | .[])

else

	"DHCP=ipv4"

end
	' < $CFG/network.json > $RUNETC/systemd/network/50-wired.network
}

cmd_update_ntp() {
	mkdir -p $RUNETC/systemd/

	jq -r '
"[Time]",
(.servers // [] | map("NTP=\(.)") | .[])
	' < $CFG/ntp.json > $RUNETC/systemd/timesyncd.conf
}

cmd_reset_password() {
	logger 'Resetting password configuration.'

	systemctl stop em-app-web-login
	# This resets all users - if we ever allow adding multiple users, we should not just delete the whole file
	rm $APPCFG/web-login/users.json
	systemctl start em-app-web-login

	rm -f $CFG/password
	em-update-password
}

cmd_reset_network() {
	logger 'Resetting network configuration.'

	rm -f $CFG/network.json
	cmd_init
	cmd_update_network
	systemctl restart systemd-networkd.service
}

cmd_debug_access() {
	logger 'Enabling SSH debug access.'

	systemctl --no-block start dropbear.socket
}

cmd_update() {
	em-update-password
	cmd_update_network
	cmd_update_ntp

	if [ "$(fw_printenv -n enable_ssh 2>/dev/null)" = '1' ]; then
		cmd_debug_access
	fi
}

cmd_factory_reset() {
	logger 'Performing factory reset.'

	touch /update/factory-reset
	reboot
}

case "$CMD" in
init|\
update|\
update_network|\
update_ntp|\
reset_password|\
reset_network|\
debug_access|\
factory_reset)
	"cmd_$CMD"
	;;

*)
	echo >&2 'emcfg: unknown command.'
	exit 1
esac
