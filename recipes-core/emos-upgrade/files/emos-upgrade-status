#!/bin/sh

#
# Copyright (C) 2018-2021, TQ-Systems GmbH
#

set -e

FILE_LOCK="/update/lock"
FILE_UPDATE_STATUS="/update/status"
FILE_UPDATE_SLOT="/update/slot"
FILE_ERROR="/update/error"

exec 9>"$FILE_LOCK"
flock 9


get_slot_active() {
	rauc status --output-format=json | jq -r '.booted'
}

get_slot_other() {
	case "$(get_slot_active)" in
	1)
		echo 2
		;;

	2)
		echo 1
		;;

	*)
		return 1
	esac

	return 0
}

get_slot_device() {
	[ $# -eq 1  ] || return 1

	rauc status --output-format=json | jq -r "
		.slots |
		map(to_entries | .[0].value | select(.class == \"rootfs\" and .bootname == \"$1\")) |
		.[0].device
	"
}

get_status() {
	cat "$FILE_UPDATE_STATUS" 2>/dev/null || true
}

check_slot_after_reboot() {
	if [ -e "$FILE_UPDATE_SLOT" ]; then
		if [ "$(get_slot_active)" = "$(cat "$FILE_UPDATE_SLOT")" ]; then
			# true, if rootfs slot updated successful
			return 0
		else
			# false, if failed to boot into new rootfs slot
			return 1
		fi
	else
		echo >&2 "emos-upgrade-status: Cannot read updated slot in file $FILE_UPDATE_SLOT"
	fi

	return 0
}

check_transition() {
	local old_status
	old_status="$(get_status)"

	if [ "$old_status" != "$1" ]; then
		echo >&2 "emos-upgrade-status: invalid transition from '$old_status' to '$2'. Is there another upgrade running?"
		return 1
	fi
}

set_status() {
	[ $# -eq 1 ] && [ -n "$1" ] || return 1

	case "$1" in
	"update_1_started")
		check_transition '' "$1"
		# remove old errors when starting
		rm -f "$FILE_ERROR"
		# save update slot for check_slot_after_reboot()
		get_slot_other > "$FILE_UPDATE_SLOT"
		;;
	"update_1_finished")
		check_transition 'update_1_started' "$1"
		;;
	"update_1_checked")
		check_transition 'update_1_finished' "$1"
		;;
	*)
		echo >&2 'emos-upgrade-status: Cannot set unknown status.'
		return 1
	esac

	echo "$1" > "$FILE_UPDATE_STATUS"
}

set_error() {
	[ $# -eq 1 ] && [ -n "$1" ] || return 1

	case "$1" in
	"check_slot_failed")
		echo "$1" > "$FILE_ERROR"
		;;
	*)
		echo >&2 "emos-upgrade-status: Cannot set unknown error $1."
		return 1
	esac
}

reset_status() {
	rm -f "$FILE_UPDATE_STATUS" "$FILE_UPDATE_SLOT"
}

CMD="$1"; shift

case "$CMD" in
set_status)
	set_status "$@"
	;;
get_status)
	get_status
	;;
get_slot_active)
	get_slot_active
	;;
get_slot_other)
	get_slot_other
	;;
get_slot_device)
	get_slot_device "$@"
	;;
check_slot)
	check_slot_after_reboot
	;;
set_error)
	set_error "$@"
	;;
reset)
	reset_status
	;;
*)
	echo >&2 'emos-upgrade-status: Unknown command.'
	exit 1
esac
