DISTRO = "emos"
DISTROOVERRIDES = "emos"
DISTRO_NAME = "EMOS"
DISTRO_VERSION = "2.1.0-rc1"

SDK_VERSION := "${DISTRO_VERSION}"

#MAINTAINER = ""

LOCALCONF_VERSION = "1"

SDK_NAME = "${DISTRO}-${SDK_ARCH}-${TUNE_PKGARCH}"

TCLIBC = "glibc"
TCLIBCAPPEND = ""

VOLATILE_BINDS = "\
    /var/volatile/cache /var/cache\n\
    /var/volatile/lib/dbus /var/lib/dbus\n\
    /var/volatile/lib/private /var/lib/private\n\
    /var/volatile/lib/systemd /var/lib/systemd\n\
"
VOLATILE_LOG_DIR = "no"
INHERIT += "package-rm-var-log"
DEPLOY_DIR_EMPKG = "${DEPLOY_DIR}/apps"

DISTRO_FEATURES_DEFAULT = "largefile"

# consider initscripts on em300 if high RAM usage
#DISTRO_FEATURES_append_em300 = " sysvinit"
#VIRTUAL-RUNTIME_init_manager_em300 = "busybox"
#VIRTUAL-RUNTIME_initscripts_em300 = "initscripts"
#DISTRO_FEATURES_BACKFILL_CONSIDERED += "systemd"

# use systemd as default
DISTRO_FEATURES_append ?= " systemd"
VIRTUAL-RUNTIME_init_manager ?= "systemd"
VIRTUAL-RUNTIME_initscripts ?= ""
VIRTUAL-RUNTIME_keymaps = "keymaps"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"

USERADDEXTENSION = "useradd-staticids"
USERADD_UID_TABLES = "files/emos/passwd"
USERADD_GID_TABLES = "files/emos/group"
USERADD_ERROR_DYNAMIC = "error"
PACKAGECONFIG_remove_pn-systemd += "sysusers"

PACKAGECONFIG_pn-jq = ""
PACKAGECONFIG_pn-jq-native = ""

PACKAGECONFIG_pn-libsolv = ""

PREFERRED_VERSION_libmodbus = "3.1.%"

RAUC_EXAMPLE_KEY_FILE = "${@bb.utils.which(d.getVar('BBPATH'), 'files/emos/rauc/key.pem')}"
RAUC_EXAMPLE_CERT_FILE = "${@bb.utils.which(d.getVar('BBPATH'), 'files/emos/rauc/ca.cert.pem')}"
RAUC_EXAMPLE_KEYRING_FILE = "${RAUC_EXAMPLE_CERT_FILE}"

RAUC_KEY_FILE ?= "${RAUC_EXAMPLE_KEY_FILE}"
RAUC_CERT_FILE ?= "${RAUC_EXAMPLE_CERT_FILE}"
RAUC_KEYRING_FILE ?= "${RAUC_EXAMPLE_KEYRING_FILE}"

# Defaults from poky

PREMIRRORS ??= "\
bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
gitsm://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n \
hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n \
p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n \
svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"

MIRRORS =+ "\
ftp://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n \
http://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n \
https://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n"

# The CONNECTIVITY_CHECK_URI's are used to test whether we can succesfully
# fetch from the network (and warn you if not). To disable the test set
# the variable to be empty.
# Git example url: git://git.yoctoproject.org/yocto-firewall-test;protocol=git;rev=master
CONNECTIVITY_CHECK_URIS ?= "https://www.example.com/"

# QA check settings - a little stricter than the OE-Core defaults
WARN_TO_ERROR_QA = "already-stripped compile-host-path install-host-path \
                    installed-vs-shipped ldflags pn-overrides rpaths staticdev \
                    useless-rpaths"
WARN_QA_remove = "${WARN_TO_ERROR_QA}"
ERROR_QA_append = " ${WARN_TO_ERROR_QA}"

require conf/distro/include/no-static-libs.inc
require conf/distro/include/yocto-uninative.inc
require conf/distro/include/security_flags.inc

INHERIT += "uninative"
