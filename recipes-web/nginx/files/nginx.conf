
user www;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /run/nginx/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    client_max_body_size 256M;

    server {
		listen 80 default_server;
		
		access_log  off;
	
		root /opt/www;
	
		index index.html;
	
		server_name localhost;
	
		location / {
			try_files $uri $uri/ @rewrites;
		}
	
		location @rewrites {
			rewrite ^(.+)$ /index.html last;
		}
	
		location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
			# Some basic cache-control for static files to be sent to the browser
			expires max;
			add_header Pragma public;
			add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		}
	
	
		location /api/sensor-config-service {
			proxy_pass http://127.0.0.1:5050/api/sensor-config-service;
		}
	
		location /api/device-config-service {
			proxy_pass http://127.0.0.1:5051/api/device-config-service;
		}
	
		location /api/efm-service {
			proxy_pass http://127.0.0.1:5052/api/efm-service;
		}
	
		location /api/submeter-service {
			proxy_pass http://127.0.0.1:5056/api/submeter-service;
		}
	
		location /api/data-transfer-service {
			proxy_pass http://127.0.0.1:9000/api/data-transfer-service;
		}
	
		location /api/web-login-service {
			proxy_pass http://127.0.0.1:14000/api/web-login-service;
		}
		
		location /api/overload-protection {
			proxy_pass http://127.0.0.1:5060/api/overload-protection;
		}
		
		location /api/smockulator {
			proxy_pass http://127.0.0.1:5065/api/smockulator;
		}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
